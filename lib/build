#!/bin/bash -
#-----------------------------------------------------#
# build
#
# Compile a single file of libraries so that you don't have to parse for stuff every time.
#-----------------------------------------------------#
#-----------------------------------------------------#
# Licensing
# ---------
# 
# Copyright (c) 2013 Vokayent
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#-----------------------------------------------------#
PROGRAM="build"

# usage() - Show usage message and die with $STATUS
usage() {
   STATUS="${1:-0}"
   echo "Usage: ./${PROGRAM}
	[ -  ]

-d | --databases              desc
-a | --arguments              desc
-r | --random                 desc
-s | --strings                desc
-i | --integers               desc
-m | --math                   desc
-a | --arrays                 desc
-a | --all                    desc
-v|--verbose                  Be verbose in output.
-h|--help                     Show this help and quit.
"
   exit $STATUS
}


# Die if no arguments received.
[ -z $BASH_ARGV ] && printf "Nothing to do\n" && usage 1

# Process options.
while [ $# -gt 0 ]
do
   case "$1" in
     -d|--databases)
         DO_DATABASES=true
      ;;
     -a|--arguments)
         DO_ARGUMENTS=true
      ;;
     -r|--random)
         DO_RANDOM=true
      ;;
     -s|--strings)
         DO_STRINGS=true
      ;;
     -i|--integers)
         DO_INTEGERS=true
      ;;
     -m|--math)
         DO_MATH=true
      ;;
     -a|--arrays)
         DO_ARRAYS=true
      ;;
     -a|--all)
         DO_ALL=true
      ;;
      -v|--verbose)
        VERBOSE=true
      ;;
      -h|--help)
        usage 0
      ;;
      -*)
      printf "Bad argument.\n";
      exit 1
     ;;
      *) break;;
   esac
shift
done

# databases
if [ ! -z $DO_DATABASES ]
then
   echo '...'
fi

# arguments
if [ ! -z $DO_ARGUMENTS ]
then
   echo '...'
fi

# random
if [ ! -z $DO_RANDOM ]
then
   echo '...'
fi

# strings
if [ ! -z $DO_STRINGS ]
then
   echo '...'
fi

# integers
if [ ! -z $DO_INTEGERS ]
then
   echo '...'
fi

# math
if [ ! -z $DO_MATH ]
then
   echo '...'
fi

# arrays
if [ ! -z $DO_ARRAYS ]
then
   echo '...'
fi

# all
if [ ! -z $DO_ALL ]
then
   echo '...'
fi
