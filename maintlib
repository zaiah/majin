#!/bin/bash -
#-----------------------------------------------------#
# maintlib
#
# Maintains bashutil libraries. 
#-----------------------------------------------------#
#-----------------------------------------------------#
# Licensing
# ---------
# 
# Copyright (c) 2013 Vokayent
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#-----------------------------------------------------#
PROGRAM="maintlib"

# References to $SELF
BINDIR="$(dirname "$(readlink -f $0)")"
SELF="$(readlink -f $0)"

# Reference a central library
LIB="${BINDIR}/lib.complete"
source $LIB

# usage() - Show usage message and die with $STATUS
usage() {
   STATUS="${1:-0}"
   echo "Usage: ./${PROGRAM}
	[ -  ]

-a | --add <arg>              desc
-n | --name <arg>             desc
-s | --summary <arg>          desc
-r | --remove <arg>           desc
-e | --edit <arg>             desc
-f | --from <arg>             desc
-c | --class <arg>            desc
-c | --classes                desc
-v | --verbose                Be verbose in output.
-h | --help                   Show this help and quit.
"
   exit $STATUS
}


# Die if no arguments received.
[ -z $BASH_ARGV ] && printf "Nothing to do\n" && usage 1

# Process options.
while [ $# -gt 0 ]
do
   case "$1" in
     -a|--add)
         DO_ADD=true
         shift
         ADD="$1"
      ;;
     -n|--name)
         DO_NAME=true
         shift
         NAME="$1"
      ;;
     -s|--summary)
         DO_SUMMARY=true
         shift
         SUMMARY="$1"
      ;;
     -r|--remove)
         DO_REMOVE=true
         shift
         REMOVE="$1"
      ;;
     -e|--edit)
         DO_EDIT=true
         shift
         EDIT="$1"
      ;;
     -f|--from)
         DO_FROM=true
         shift
         FROM="$1"
      ;;
     -c|--class)
         DO_CLASS=true
         shift
         CLASS="$1"
      ;;
     -c|--classes)
         DO_CLASSES=true
      ;;
     -v|--verbose)
        VERBOSE=true
      ;;
     -h|--help)
        usage 0
      ;;
     --) break;;
     -*)
      printf "Unknown argument received.\n";
      usage 1
     ;;
     *) break;;
   esac
shift
done


# Evaluate the flags.
eval_flags

# add
if [ ! -z $DO_ADD ]
then
	# Class?
	if [ ! -z "$CLASS" ] 
	then 
		echo "Can't add a library without some sort of general classification."
		echo "(Try the --class flag, or use --classes for a list of available classes.)"
		usage 1
	fi

	# Add file into library.
	# Copying with the correct name if I've asked for one.
   echo '...'
fi


# remove
if [ ! -z $DO_REMOVE ]
then
	# REmove from folder and manifest file.
   echo '...'
fi


# edit
if [ ! -z $DO_EDIT ]
then
	# Open a window allowing one to edit the class.

	# Edit manifest too?
   echo '...'
fi


# from
if [ ! -z $DO_FROM ]
then
	# Extract the function body (matching the name) from an existent library.
   echo '...'
fi


# class
if [ ! -z $DO_CLASS ]
then
	# Choose a class.
   echo '...'
fi


# classes
if [ ! -z $DO_CLASSES ]
then
	# List all the available classes.
   echo '...'
fi
